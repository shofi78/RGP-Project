# -*- coding: utf-8 -*-
"""Dayasaing Produk Ekspor Pertanian Indonesia ke Jepang

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sFtSoNuqz9hZPl8dtA_1Vk5BDylsvvci
"""

import pandas as pd

url = "https://github.com/shofi78/RGP-Project/raw/main/dataset/All%20Product%20%26%20Agricultural%20Ina-Japan%20by%20Value.xlsx"

ina_to_japan = pd.read_excel(url,"Indonesia export to Jpn")
ina_to_japan.head()

world_to_japan = pd.read_excel(url,"Japan's import from world")
world_to_japan.head()

world_to_japan_copy = world_to_japan.copy()
world_to_japan_copy.head()

# Load product yang memiliki HS Code 06-15 sebagai produk pertanian
agri_product = pd.read_excel(url,"06-15 Pertanian Ina-Jpn")
agri_product

# Merge data world to japan copy and agri product
df_merged = pd.merge(agri_product, world_to_japan_copy, how="left", on="Product code")

# cleaning data
df_merged.drop('Product label_y', axis=1, inplace=True)
df_merged.rename(columns = {'Product label_x':'Product'}, inplace = True)
df_merged['Product code'] = df_merged['Product code'].str.replace("'","")

df_merged

df_merged.columns

# cek tipe data
df_merged.info()

df_merged.isnull().sum()

ina_to_japan['Value in 2017'].iloc[0]

df_merged['RCA 2017'] = (df_merged['Value in 2017']/ina_to_japan['Value in 2017'].iloc[0])/(df_merged['World Value 2017']/world_to_japan['World Value 2017'].iloc[0])
df_merged['RCA 2018'] = (df_merged['Value in 2018']/ina_to_japan['Value in 2018'].iloc[0])/(df_merged['World Value 2018']/world_to_japan['World Value 2018'].iloc[0])
df_merged['RCA 2019'] = (df_merged['Value in 2019']/ina_to_japan['Value in 2019'].iloc[0])/(df_merged['World Value 2019']/world_to_japan['World Value 2019'].iloc[0])
df_merged['RCA 2020'] = (df_merged['Value in 2020']/ina_to_japan['Value in 2020'].iloc[0])/(df_merged['World Value  2020']/world_to_japan['World Value  2020'].iloc[0])
df_merged['RCA 2021'] = (df_merged['Value in 2021']/ina_to_japan['Value in 2021'].iloc[0])/(df_merged['World Value 2021']/world_to_japan['World Value 2021'].iloc[0])

df_merged

# save to excel and change to pivot table manually in excel
from google.colab import files
df_merged.to_excel('df_merged_rca_all_pivot.xlsx')
files.download('df_merged_rca_all_pivot.xlsx')

"""#### Load Data RCA yang sudah di pivot dari tahun 2017-2020"""

url = "https://github.com/shofi78/RGP-Project/raw/main/dataset/df_merged_rca_all_pivot.csv" #### MASIH BERMASALAH DTA PRODUCT CODENYA YA

df_rca_pivot = pd.read_csv(url)

# Menambahkan nilai nol pada product code yang memiliki 3 digit
df_rca_pivot['Product code']= df_rca_pivot['Product code'].astype(str).str.rjust(4,'0')

df_rca_pivot

df_rca_pivot.info()

df_rca_pivot.columns

# Menghitung EPD untuk masing-masing tahun

epd_2021 = df_rca_pivot[df_rca_pivot['Tahun'] == 2021].reset_index(drop=True)
epd_2020 = df_rca_pivot[df_rca_pivot['Tahun'] == 2020].reset_index(drop=True)
epd_2019 = df_rca_pivot[df_rca_pivot['Tahun'] == 2019].reset_index(drop=True)
epd_2018 = df_rca_pivot[df_rca_pivot['Tahun'] == 2018].reset_index(drop=True)
epd_2017 = df_rca_pivot[df_rca_pivot['Tahun'] == 2017].reset_index(drop=True)

# Menambahkan nilai sumbu X pada masing-masing tahun
epd_2021['sumbu_x'] = (((epd_2021['Ina Value']/epd_2021['World Value'])*100) - ((epd_2020['Ina Value']/epd_2020['World Value'])*100))/5
epd_2020['sumbu_x'] = (((epd_2020['Ina Value']/epd_2020['World Value'])*100) - ((epd_2019['Ina Value']/epd_2019['World Value'])*100))/5
epd_2019['sumbu_x'] = (((epd_2019['Ina Value']/epd_2019['World Value'])*100) - ((epd_2018['Ina Value']/epd_2018['World Value'])*100))/5
epd_2018['sumbu_x'] = (((epd_2018['Ina Value']/epd_2018['World Value'])*100) - ((epd_2017['Ina Value']/epd_2017['World Value'])*100))/5
epd_2017['sumbu_x'] = 0

# Menambahkan nilai sumbu Y pada masing-masing tahun
epd_2021['sumbu_y'] = (((ina_to_japan['Value in 2021'].iloc[0]/world_to_japan['World Value 2021'].iloc[0])*100) - ((ina_to_japan['Value in 2020'].iloc[0]/world_to_japan['World Value  2020'].iloc[0])*100))/5
epd_2020['sumbu_y'] = (((ina_to_japan['Value in 2020'].iloc[0]/world_to_japan['World Value  2020'].iloc[0])*100) - ((ina_to_japan['Value in 2019'].iloc[0]/world_to_japan['World Value 2019'].iloc[0])*100))/5
epd_2019['sumbu_y']= (((ina_to_japan['Value in 2019'].iloc[0]/world_to_japan['World Value 2019'].iloc[0])*100) - ((ina_to_japan['Value in 2018'].iloc[0]/world_to_japan['World Value 2018'].iloc[0])*100))/5
epd_2018['sumbu_y'] = (((ina_to_japan['Value in 2018'].iloc[0]/world_to_japan['World Value 2018'].iloc[0])*100) - ((ina_to_japan['Value in 2017'].iloc[0]/world_to_japan['World Value 2017'].iloc[0])*100))/5
epd_2017['sumbu_y'] = 0

# Merge data tahun 2018-2021
from functools import reduce
data_frames = [epd_2017, epd_2018, epd_2019, epd_2020, epd_2021]

data_epd_all = pd.concat(data_frames).reset_index(drop=True)

data_epd_all

data_epd_all.columns

def ProductPositionClassifier(df):
    for i, row in df.iterrows():
        if ((df['RCA '][i] >= 1) and (df['sumbu_x'][i] < 0) and (df['sumbu_y'][i] < 0)):
            df.at[i,'Cluster Name'] = 'Retreat'
        elif ((df['RCA '][i] >= 1) and (df['sumbu_x'][i] < 0) and (df['sumbu_y'][i] > 0)):
            df.at[i,'Cluster Name'] = 'Lost Opportunity'
        elif ((df['RCA '][i] >= 1) and (df['sumbu_x'][i] > 0) and (df['sumbu_y'][i] > 0)):
            df.at[i,'Cluster Name'] = 'Rising Star'
        elif ((df['RCA '][i] >= 1) and (df['sumbu_x'][i] > 0) and (df['sumbu_y'][i] < 0)):
            df.at[i,'Cluster Name'] = 'Falling Star'
        elif ((df['RCA '][i] < 1) and (df['sumbu_x'][i] < 0) and (df['sumbu_y'][i] < 0)):
            df.at[i,'Cluster Name'] = 'Retreat'
        elif ((df['RCA '][i] < 1) and (df['sumbu_x'][i] < 0) and (df['sumbu_y'][i] > 0)):
            df.at[i,'Cluster Name'] = 'Lost Opportunity'
        elif ((df['RCA '][i] < 1) and (df['sumbu_x'][i] > 0) and (df['sumbu_y'][i] > 0)):
            df.at[i,'Cluster Name'] = 'Rising Star'
        elif ((df['RCA '][i] < 1) and (df['sumbu_x'][i] > 0) and (df['sumbu_y'][i] < 0)):
            df.at[i,'Cluster Name'] = 'Falling Star'
        else:
            df.at[i,'Cluster Name'] = 'No Position'
    return df

ProductPositionClassifier(data_epd_all)

data_epd_all = ProductPositionClassifier(data_epd_all)

data_epd_all.columns

def ProductPotentialModel(df):
    for i, row in df.iterrows():
        if df['RCA '][i] >= 1 and df['Cluster Name'][i] == 'Rising Star':
            df.at[i,'X Model'] = 'Optimistic Market Development'
        elif df['RCA '][i] >= 1 and df['Cluster Name'][i] == 'Falling Star':
            df.at[i,'X Model'] = 'Potential Market Development'
        elif df['RCA '][i] >= 1 and df['Cluster Name'][i] == 'Lost Opportunity':
            df.at[i,'X Model'] = 'Potential Market Development'
        elif df['RCA '][i] >= 1 and df['Cluster Name'][i] == 'Retreat':
            df.at[i,'X Model'] = 'Less Potential Market Development'
        elif df['RCA '][i] < 1 and df['Cluster Name'][i] == 'Rising Star':
            df.at[i,'X Model'] = 'Potential Market Development'
        elif df['RCA '][i] < 1 and df['Cluster Name'][i] == 'Falling Star':
            df.at[i,'X Model'] = 'Less Potential Market Development'
        elif df['RCA '][i] < 1 and df['Cluster Name'][i] == 'Lost Opportunity':
            df.at[i,'X Model'] = 'Less Potential Market Development'
        elif df['RCA '][i] < 1 and df['Cluster Name'][i] == 'Retreat':
            df.at[i,'X Model'] = 'Non Potential Market Development'
        else:
           df.at[i,'X Model'] = 'No Position'
    return df

data_epd_all = ProductPotentialModel(data_epd_all)
data_epd_all

# save to excel and visualization
from google.colab import files
data_epd_all.to_excel('data_epd_2018-2021.xlsx')
files.download('data_epd_2018-2021.xlsx')